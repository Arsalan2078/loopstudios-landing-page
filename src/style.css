@import url("https://fonts.googleapis.com/css2?family=Alata&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Josefin+Sans:ital,wght@0,100..700;1,100..700&display=swap");
/***
    The new CSS reset - version 1.11.3 (last updated 25.08.2024)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

a, button {
  cursor: revert;
}

ol, ul, menu, summary {
  list-style: none;
}

ol {
  counter-reset: revert;
}

img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

table {
  border-collapse: collapse;
}

input, textarea {
  -webkit-user-select: auto;
}

textarea {
  white-space: revert;
}

meter {
  -webkit-appearance: revert;
  appearance: revert;
}

:where(pre) {
  all: revert;
  box-sizing: border-box;
}

::placeholder {
  color: unset;
}

:where([hidden]) {
  display: none;
}

:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

:where([draggable=true]) {
  -webkit-user-drag: element;
}

:where(dialog:modal) {
  all: revert;
  box-sizing: border-box;
}

::-webkit-details-marker {
  display: none;
}

.bg-clr-white {
  background-color: hsl(0, 0%, 100%);
}

.text-clr-white {
  background-color: hsl(0, 0%, 100%);
}

.bg-clr-black {
  background-color: hsl(0, 0%, 0%);
}

.text-clr-black {
  background-color: hsl(0, 0%, 0%);
}

.bg-clr-dark-grey {
  background-color: hsl(0, 0%, 55%);
}

.text-clr-dark-grey {
  background-color: hsl(0, 0%, 55%);
}

.bg-clr-very-dark-grey {
  background-color: hsl(0, 0%, 41%);
}

.text-clr-very-dark-grey {
  background-color: hsl(0, 0%, 41%);
}

html, body {
  overflow-x: hidden;
}

/*# sourceMappingURL=style.css.map */
